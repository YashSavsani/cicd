# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Push a new build to Firebase App Distribution"
  lane :development do |options|
    setup_ci()

    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "120"
    ENV["FASTLANE_XCODEBUILD_SETTINGS_RETRIES"] = "6"

    match(app_identifier: "com.aubergine.cicd.dev", type: "adhoc")
    
    version = options[:version] || "1.0.0" 
    build_number = options[:build_number] || 1
    release_notes = options[:release_notes] || "Lots of amazing new features to test out!"
    groups = options[:groups] || "Internal"
    testers = options[:testers] || ""
  
    increment_version_number(version_number: version)
    increment_build_number(build_number: build_number)

    sh "flutter build ios --flavor development --target lib/main_development.dart --no-codesign"

    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "development",
      export_method: "ad-hoc",
      # xcargs: "-allowProvisioningUpdates"
    )
  
    firebase_app_distribution(
      app: "1:1066466474532:ios:0ccf18ef14f0193b5936b1",
      service_credentials_file: "fastlane/service-account.json",
      testers: testers,
      groups: groups,
      release_notes: release_notes,
    )
  end

  lane :staging do |options|
    setup_ci()

    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "120"
    ENV["FASTLANE_XCODEBUILD_SETTINGS_RETRIES"] = "6"

    match(app_identifier: "com.aubergine.cicd.stg", type: "adhoc")
    
    version = options[:version] || "1.0.0" 
    build_number = options[:build_number] || 1
    release_notes = options[:release_notes] || "Lots of amazing new features to test out!"
    groups = options[:groups] || "Internal"
    testers = options[:testers] || ""
  
    increment_version_number(version_number: version)
    increment_build_number(build_number: build_number)

    sh "flutter build ios --flavor staging --target lib/main_staging.dart --no-codesign"

    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "staging",
      export_method: "ad-hoc",
      # xcargs: "-allowProvisioningUpdates"
    )
  
    firebase_app_distribution(
      app: "1:1066466474532:ios:404f326999973a745936b1",
      service_credentials_file: "fastlane/service-account.json",
      testers: testers,
      groups: groups,
      release_notes: release_notes
    )
  end

  lane :production do |options|
    setup_ci()

    release_notes = options[:release_notes] || "Lots of amazing new features to test out!"
    groups = options[:groups] || "Internal"

    ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "120"
    ENV["FASTLANE_XCODEBUILD_SETTINGS_RETRIES"] = "6"

    match(app_identifier: "com.aubergine.cicd",type: "appstore")

    updated_version_number = bump_build_number()
    increment_build_number(build_number: updated_version_number)

    sh "flutter build ios --flavor production --target lib/main_production.dart --no-codesign"
    
    build_app(
      workspace: "Runner.xcworkspace",
      scheme: "production",
      export_method: "app-store",
      # xcargs: "-allowProvisioningUpdates"
    )

    pilot(
      api_key_path: "fastlane/store.json", 
      skip_waiting_for_build_processing: false, 
      changelog: release_notes,
      groups: groups,
    )
  end

  def bump_build_number()
    latest_build_number = latest_testflight_build_number(initial_build_number: 0)
    return (latest_build_number + 1)
  end
end